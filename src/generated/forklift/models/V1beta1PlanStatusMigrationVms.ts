/**
 * 
 * 
 *
 * The version of the OpenAPI document: 
 * Contact Email: 
 * License: 
 *
 * NOTE: This file is auto generated by crdtotypes (https://github.com/yaacov/crdtoapi/).
 * https://github.com/yaacov/crdtoapi/README.crdtotypes
 */

import { V1beta1PlanStatusMigrationVmsConditions } from './V1beta1PlanStatusMigrationVmsConditions';
import { V1beta1PlanStatusMigrationVmsError } from './V1beta1PlanStatusMigrationVmsError';
import { V1beta1PlanStatusMigrationVmsHooks } from './V1beta1PlanStatusMigrationVmsHooks';
import { V1beta1PlanStatusMigrationVmsPipeline } from './V1beta1PlanStatusMigrationVmsPipeline';
import { V1beta1PlanStatusMigrationVmsWarm } from './V1beta1PlanStatusMigrationVmsWarm';

/**
 * VM Status
 *
 * @export
 */
export interface V1beta1PlanStatusMigrationVms {
  /** completed
   * Completed timestamp.
   *
   * @required {false}
   * @format {date-time}
   */
  completed?: string;
  /** conditions
   * Condition
   *
   * @required {false}
   */
  conditions?: V1beta1PlanStatusMigrationVmsConditions[];
  /** error
   * Errors
   *
   * @required {false}
   */
  error?: V1beta1PlanStatusMigrationVmsError;
  /** hooks
   * Plan hook.
   *
   * @required {false}
   */
  hooks?: V1beta1PlanStatusMigrationVmsHooks[];
  /** id
   * The object ID. vsphere: The managed object ID.
   *
   * @required {false}
   */
  id?: string;
  /** name
   * An object Name. vsphere: A qualified name.
   *
   * @required {false}
   */
  name?: string;
  /** namespace
   * The VM Namespace Only relevant for an openshift source.
   *
   * @required {false}
   */
  namespace?: string;
  /** phase
   * Phase
   *
   * @required {true}
   */
  phase: string;
  /** pipeline
   * Pipeline step.
   *
   * @required {false}
   */
  pipeline?: V1beta1PlanStatusMigrationVmsPipeline[];
  /** restorePowerState
   * Source VM power state before migration.
   *
   * @required {false}
   */
  restorePowerState?: string;
  /** started
   * Started timestamp.
   *
   * @required {false}
   * @format {date-time}
   */
  started?: string;
  /** type
   * Type used to qualify the name.
   *
   * @required {false}
   */
  type?: string;
  /** warm
   * Warm migration status
   *
   * @required {false}
   */
  warm?: V1beta1PlanStatusMigrationVmsWarm;
}
