/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import type { IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource } from './IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource';
import {
    IoK8sApiCoreV1AWSElasticBlockStoreVolumeSourceFromJSON,
    IoK8sApiCoreV1AWSElasticBlockStoreVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1AWSElasticBlockStoreVolumeSourceToJSON,
} from './IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource';
import type { IoK8sApiCoreV1AzureDiskVolumeSource } from './IoK8sApiCoreV1AzureDiskVolumeSource';
import {
    IoK8sApiCoreV1AzureDiskVolumeSourceFromJSON,
    IoK8sApiCoreV1AzureDiskVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1AzureDiskVolumeSourceToJSON,
} from './IoK8sApiCoreV1AzureDiskVolumeSource';
import type { IoK8sApiCoreV1AzureFileVolumeSource } from './IoK8sApiCoreV1AzureFileVolumeSource';
import {
    IoK8sApiCoreV1AzureFileVolumeSourceFromJSON,
    IoK8sApiCoreV1AzureFileVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1AzureFileVolumeSourceToJSON,
} from './IoK8sApiCoreV1AzureFileVolumeSource';
import type { IoK8sApiCoreV1CSIVolumeSource } from './IoK8sApiCoreV1CSIVolumeSource';
import {
    IoK8sApiCoreV1CSIVolumeSourceFromJSON,
    IoK8sApiCoreV1CSIVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1CSIVolumeSourceToJSON,
} from './IoK8sApiCoreV1CSIVolumeSource';
import type { IoK8sApiCoreV1CephFSVolumeSource } from './IoK8sApiCoreV1CephFSVolumeSource';
import {
    IoK8sApiCoreV1CephFSVolumeSourceFromJSON,
    IoK8sApiCoreV1CephFSVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1CephFSVolumeSourceToJSON,
} from './IoK8sApiCoreV1CephFSVolumeSource';
import type { IoK8sApiCoreV1CinderVolumeSource } from './IoK8sApiCoreV1CinderVolumeSource';
import {
    IoK8sApiCoreV1CinderVolumeSourceFromJSON,
    IoK8sApiCoreV1CinderVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1CinderVolumeSourceToJSON,
} from './IoK8sApiCoreV1CinderVolumeSource';
import type { IoK8sApiCoreV1ConfigMapVolumeSource } from './IoK8sApiCoreV1ConfigMapVolumeSource';
import {
    IoK8sApiCoreV1ConfigMapVolumeSourceFromJSON,
    IoK8sApiCoreV1ConfigMapVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1ConfigMapVolumeSourceToJSON,
} from './IoK8sApiCoreV1ConfigMapVolumeSource';
import type { IoK8sApiCoreV1DownwardAPIVolumeSource } from './IoK8sApiCoreV1DownwardAPIVolumeSource';
import {
    IoK8sApiCoreV1DownwardAPIVolumeSourceFromJSON,
    IoK8sApiCoreV1DownwardAPIVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1DownwardAPIVolumeSourceToJSON,
} from './IoK8sApiCoreV1DownwardAPIVolumeSource';
import type { IoK8sApiCoreV1EmptyDirVolumeSource } from './IoK8sApiCoreV1EmptyDirVolumeSource';
import {
    IoK8sApiCoreV1EmptyDirVolumeSourceFromJSON,
    IoK8sApiCoreV1EmptyDirVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1EmptyDirVolumeSourceToJSON,
} from './IoK8sApiCoreV1EmptyDirVolumeSource';
import type { IoK8sApiCoreV1EphemeralVolumeSource } from './IoK8sApiCoreV1EphemeralVolumeSource';
import {
    IoK8sApiCoreV1EphemeralVolumeSourceFromJSON,
    IoK8sApiCoreV1EphemeralVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1EphemeralVolumeSourceToJSON,
} from './IoK8sApiCoreV1EphemeralVolumeSource';
import type { IoK8sApiCoreV1FCVolumeSource } from './IoK8sApiCoreV1FCVolumeSource';
import {
    IoK8sApiCoreV1FCVolumeSourceFromJSON,
    IoK8sApiCoreV1FCVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1FCVolumeSourceToJSON,
} from './IoK8sApiCoreV1FCVolumeSource';
import type { IoK8sApiCoreV1FlexVolumeSource } from './IoK8sApiCoreV1FlexVolumeSource';
import {
    IoK8sApiCoreV1FlexVolumeSourceFromJSON,
    IoK8sApiCoreV1FlexVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1FlexVolumeSourceToJSON,
} from './IoK8sApiCoreV1FlexVolumeSource';
import type { IoK8sApiCoreV1FlockerVolumeSource } from './IoK8sApiCoreV1FlockerVolumeSource';
import {
    IoK8sApiCoreV1FlockerVolumeSourceFromJSON,
    IoK8sApiCoreV1FlockerVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1FlockerVolumeSourceToJSON,
} from './IoK8sApiCoreV1FlockerVolumeSource';
import type { IoK8sApiCoreV1GCEPersistentDiskVolumeSource } from './IoK8sApiCoreV1GCEPersistentDiskVolumeSource';
import {
    IoK8sApiCoreV1GCEPersistentDiskVolumeSourceFromJSON,
    IoK8sApiCoreV1GCEPersistentDiskVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1GCEPersistentDiskVolumeSourceToJSON,
} from './IoK8sApiCoreV1GCEPersistentDiskVolumeSource';
import type { IoK8sApiCoreV1GitRepoVolumeSource } from './IoK8sApiCoreV1GitRepoVolumeSource';
import {
    IoK8sApiCoreV1GitRepoVolumeSourceFromJSON,
    IoK8sApiCoreV1GitRepoVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1GitRepoVolumeSourceToJSON,
} from './IoK8sApiCoreV1GitRepoVolumeSource';
import type { IoK8sApiCoreV1GlusterfsVolumeSource } from './IoK8sApiCoreV1GlusterfsVolumeSource';
import {
    IoK8sApiCoreV1GlusterfsVolumeSourceFromJSON,
    IoK8sApiCoreV1GlusterfsVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1GlusterfsVolumeSourceToJSON,
} from './IoK8sApiCoreV1GlusterfsVolumeSource';
import type { IoK8sApiCoreV1HostPathVolumeSource } from './IoK8sApiCoreV1HostPathVolumeSource';
import {
    IoK8sApiCoreV1HostPathVolumeSourceFromJSON,
    IoK8sApiCoreV1HostPathVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1HostPathVolumeSourceToJSON,
} from './IoK8sApiCoreV1HostPathVolumeSource';
import type { IoK8sApiCoreV1ISCSIVolumeSource } from './IoK8sApiCoreV1ISCSIVolumeSource';
import {
    IoK8sApiCoreV1ISCSIVolumeSourceFromJSON,
    IoK8sApiCoreV1ISCSIVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1ISCSIVolumeSourceToJSON,
} from './IoK8sApiCoreV1ISCSIVolumeSource';
import type { IoK8sApiCoreV1NFSVolumeSource } from './IoK8sApiCoreV1NFSVolumeSource';
import {
    IoK8sApiCoreV1NFSVolumeSourceFromJSON,
    IoK8sApiCoreV1NFSVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1NFSVolumeSourceToJSON,
} from './IoK8sApiCoreV1NFSVolumeSource';
import type { IoK8sApiCoreV1PersistentVolumeClaimVolumeSource } from './IoK8sApiCoreV1PersistentVolumeClaimVolumeSource';
import {
    IoK8sApiCoreV1PersistentVolumeClaimVolumeSourceFromJSON,
    IoK8sApiCoreV1PersistentVolumeClaimVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1PersistentVolumeClaimVolumeSourceToJSON,
} from './IoK8sApiCoreV1PersistentVolumeClaimVolumeSource';
import type { IoK8sApiCoreV1PhotonPersistentDiskVolumeSource } from './IoK8sApiCoreV1PhotonPersistentDiskVolumeSource';
import {
    IoK8sApiCoreV1PhotonPersistentDiskVolumeSourceFromJSON,
    IoK8sApiCoreV1PhotonPersistentDiskVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1PhotonPersistentDiskVolumeSourceToJSON,
} from './IoK8sApiCoreV1PhotonPersistentDiskVolumeSource';
import type { IoK8sApiCoreV1PortworxVolumeSource } from './IoK8sApiCoreV1PortworxVolumeSource';
import {
    IoK8sApiCoreV1PortworxVolumeSourceFromJSON,
    IoK8sApiCoreV1PortworxVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1PortworxVolumeSourceToJSON,
} from './IoK8sApiCoreV1PortworxVolumeSource';
import type { IoK8sApiCoreV1ProjectedVolumeSource } from './IoK8sApiCoreV1ProjectedVolumeSource';
import {
    IoK8sApiCoreV1ProjectedVolumeSourceFromJSON,
    IoK8sApiCoreV1ProjectedVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1ProjectedVolumeSourceToJSON,
} from './IoK8sApiCoreV1ProjectedVolumeSource';
import type { IoK8sApiCoreV1QuobyteVolumeSource } from './IoK8sApiCoreV1QuobyteVolumeSource';
import {
    IoK8sApiCoreV1QuobyteVolumeSourceFromJSON,
    IoK8sApiCoreV1QuobyteVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1QuobyteVolumeSourceToJSON,
} from './IoK8sApiCoreV1QuobyteVolumeSource';
import type { IoK8sApiCoreV1RBDVolumeSource } from './IoK8sApiCoreV1RBDVolumeSource';
import {
    IoK8sApiCoreV1RBDVolumeSourceFromJSON,
    IoK8sApiCoreV1RBDVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1RBDVolumeSourceToJSON,
} from './IoK8sApiCoreV1RBDVolumeSource';
import type { IoK8sApiCoreV1ScaleIOVolumeSource } from './IoK8sApiCoreV1ScaleIOVolumeSource';
import {
    IoK8sApiCoreV1ScaleIOVolumeSourceFromJSON,
    IoK8sApiCoreV1ScaleIOVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1ScaleIOVolumeSourceToJSON,
} from './IoK8sApiCoreV1ScaleIOVolumeSource';
import type { IoK8sApiCoreV1SecretVolumeSource } from './IoK8sApiCoreV1SecretVolumeSource';
import {
    IoK8sApiCoreV1SecretVolumeSourceFromJSON,
    IoK8sApiCoreV1SecretVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1SecretVolumeSourceToJSON,
} from './IoK8sApiCoreV1SecretVolumeSource';
import type { IoK8sApiCoreV1StorageOSVolumeSource } from './IoK8sApiCoreV1StorageOSVolumeSource';
import {
    IoK8sApiCoreV1StorageOSVolumeSourceFromJSON,
    IoK8sApiCoreV1StorageOSVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1StorageOSVolumeSourceToJSON,
} from './IoK8sApiCoreV1StorageOSVolumeSource';
import type { IoK8sApiCoreV1VsphereVirtualDiskVolumeSource } from './IoK8sApiCoreV1VsphereVirtualDiskVolumeSource';
import {
    IoK8sApiCoreV1VsphereVirtualDiskVolumeSourceFromJSON,
    IoK8sApiCoreV1VsphereVirtualDiskVolumeSourceFromJSONTyped,
    IoK8sApiCoreV1VsphereVirtualDiskVolumeSourceToJSON,
} from './IoK8sApiCoreV1VsphereVirtualDiskVolumeSource';

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 * @export
 * @interface IoK8sApiCoreV1Volume
 */
export interface IoK8sApiCoreV1Volume {
    /**
     * 
     * @type {IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    awsElasticBlockStore?: IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1AzureDiskVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    azureDisk?: IoK8sApiCoreV1AzureDiskVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1AzureFileVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    azureFile?: IoK8sApiCoreV1AzureFileVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1CephFSVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    cephfs?: IoK8sApiCoreV1CephFSVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1CinderVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    cinder?: IoK8sApiCoreV1CinderVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1ConfigMapVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    configMap?: IoK8sApiCoreV1ConfigMapVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1CSIVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    csi?: IoK8sApiCoreV1CSIVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1DownwardAPIVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    downwardAPI?: IoK8sApiCoreV1DownwardAPIVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1EmptyDirVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    emptyDir?: IoK8sApiCoreV1EmptyDirVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1EphemeralVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    ephemeral?: IoK8sApiCoreV1EphemeralVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1FCVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    fc?: IoK8sApiCoreV1FCVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1FlexVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    flexVolume?: IoK8sApiCoreV1FlexVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1FlockerVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    flocker?: IoK8sApiCoreV1FlockerVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1GCEPersistentDiskVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    gcePersistentDisk?: IoK8sApiCoreV1GCEPersistentDiskVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1GitRepoVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    gitRepo?: IoK8sApiCoreV1GitRepoVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1GlusterfsVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    glusterfs?: IoK8sApiCoreV1GlusterfsVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1HostPathVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    hostPath?: IoK8sApiCoreV1HostPathVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1ISCSIVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    iscsi?: IoK8sApiCoreV1ISCSIVolumeSource;
    /**
     * name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoK8sApiCoreV1Volume
     */
    name: string;
    /**
     * 
     * @type {IoK8sApiCoreV1NFSVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    nfs?: IoK8sApiCoreV1NFSVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1PersistentVolumeClaimVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    persistentVolumeClaim?: IoK8sApiCoreV1PersistentVolumeClaimVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1PhotonPersistentDiskVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    photonPersistentDisk?: IoK8sApiCoreV1PhotonPersistentDiskVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1PortworxVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    portworxVolume?: IoK8sApiCoreV1PortworxVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1ProjectedVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    projected?: IoK8sApiCoreV1ProjectedVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1QuobyteVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    quobyte?: IoK8sApiCoreV1QuobyteVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1RBDVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    rbd?: IoK8sApiCoreV1RBDVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1ScaleIOVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    scaleIO?: IoK8sApiCoreV1ScaleIOVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1SecretVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    secret?: IoK8sApiCoreV1SecretVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1StorageOSVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    storageos?: IoK8sApiCoreV1StorageOSVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1VsphereVirtualDiskVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    vsphereVolume?: IoK8sApiCoreV1VsphereVirtualDiskVolumeSource;
}

/**
 * Check if a given object implements the IoK8sApiCoreV1Volume interface.
 */
export function instanceOfIoK8sApiCoreV1Volume(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function IoK8sApiCoreV1VolumeFromJSON(json: any): IoK8sApiCoreV1Volume {
    return IoK8sApiCoreV1VolumeFromJSONTyped(json, false);
}

export function IoK8sApiCoreV1VolumeFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiCoreV1Volume {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'awsElasticBlockStore': !exists(json, 'awsElasticBlockStore') ? undefined : IoK8sApiCoreV1AWSElasticBlockStoreVolumeSourceFromJSON(json['awsElasticBlockStore']),
        'azureDisk': !exists(json, 'azureDisk') ? undefined : IoK8sApiCoreV1AzureDiskVolumeSourceFromJSON(json['azureDisk']),
        'azureFile': !exists(json, 'azureFile') ? undefined : IoK8sApiCoreV1AzureFileVolumeSourceFromJSON(json['azureFile']),
        'cephfs': !exists(json, 'cephfs') ? undefined : IoK8sApiCoreV1CephFSVolumeSourceFromJSON(json['cephfs']),
        'cinder': !exists(json, 'cinder') ? undefined : IoK8sApiCoreV1CinderVolumeSourceFromJSON(json['cinder']),
        'configMap': !exists(json, 'configMap') ? undefined : IoK8sApiCoreV1ConfigMapVolumeSourceFromJSON(json['configMap']),
        'csi': !exists(json, 'csi') ? undefined : IoK8sApiCoreV1CSIVolumeSourceFromJSON(json['csi']),
        'downwardAPI': !exists(json, 'downwardAPI') ? undefined : IoK8sApiCoreV1DownwardAPIVolumeSourceFromJSON(json['downwardAPI']),
        'emptyDir': !exists(json, 'emptyDir') ? undefined : IoK8sApiCoreV1EmptyDirVolumeSourceFromJSON(json['emptyDir']),
        'ephemeral': !exists(json, 'ephemeral') ? undefined : IoK8sApiCoreV1EphemeralVolumeSourceFromJSON(json['ephemeral']),
        'fc': !exists(json, 'fc') ? undefined : IoK8sApiCoreV1FCVolumeSourceFromJSON(json['fc']),
        'flexVolume': !exists(json, 'flexVolume') ? undefined : IoK8sApiCoreV1FlexVolumeSourceFromJSON(json['flexVolume']),
        'flocker': !exists(json, 'flocker') ? undefined : IoK8sApiCoreV1FlockerVolumeSourceFromJSON(json['flocker']),
        'gcePersistentDisk': !exists(json, 'gcePersistentDisk') ? undefined : IoK8sApiCoreV1GCEPersistentDiskVolumeSourceFromJSON(json['gcePersistentDisk']),
        'gitRepo': !exists(json, 'gitRepo') ? undefined : IoK8sApiCoreV1GitRepoVolumeSourceFromJSON(json['gitRepo']),
        'glusterfs': !exists(json, 'glusterfs') ? undefined : IoK8sApiCoreV1GlusterfsVolumeSourceFromJSON(json['glusterfs']),
        'hostPath': !exists(json, 'hostPath') ? undefined : IoK8sApiCoreV1HostPathVolumeSourceFromJSON(json['hostPath']),
        'iscsi': !exists(json, 'iscsi') ? undefined : IoK8sApiCoreV1ISCSIVolumeSourceFromJSON(json['iscsi']),
        'name': json['name'],
        'nfs': !exists(json, 'nfs') ? undefined : IoK8sApiCoreV1NFSVolumeSourceFromJSON(json['nfs']),
        'persistentVolumeClaim': !exists(json, 'persistentVolumeClaim') ? undefined : IoK8sApiCoreV1PersistentVolumeClaimVolumeSourceFromJSON(json['persistentVolumeClaim']),
        'photonPersistentDisk': !exists(json, 'photonPersistentDisk') ? undefined : IoK8sApiCoreV1PhotonPersistentDiskVolumeSourceFromJSON(json['photonPersistentDisk']),
        'portworxVolume': !exists(json, 'portworxVolume') ? undefined : IoK8sApiCoreV1PortworxVolumeSourceFromJSON(json['portworxVolume']),
        'projected': !exists(json, 'projected') ? undefined : IoK8sApiCoreV1ProjectedVolumeSourceFromJSON(json['projected']),
        'quobyte': !exists(json, 'quobyte') ? undefined : IoK8sApiCoreV1QuobyteVolumeSourceFromJSON(json['quobyte']),
        'rbd': !exists(json, 'rbd') ? undefined : IoK8sApiCoreV1RBDVolumeSourceFromJSON(json['rbd']),
        'scaleIO': !exists(json, 'scaleIO') ? undefined : IoK8sApiCoreV1ScaleIOVolumeSourceFromJSON(json['scaleIO']),
        'secret': !exists(json, 'secret') ? undefined : IoK8sApiCoreV1SecretVolumeSourceFromJSON(json['secret']),
        'storageos': !exists(json, 'storageos') ? undefined : IoK8sApiCoreV1StorageOSVolumeSourceFromJSON(json['storageos']),
        'vsphereVolume': !exists(json, 'vsphereVolume') ? undefined : IoK8sApiCoreV1VsphereVirtualDiskVolumeSourceFromJSON(json['vsphereVolume']),
    };
}

export function IoK8sApiCoreV1VolumeToJSON(value?: IoK8sApiCoreV1Volume | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'awsElasticBlockStore': IoK8sApiCoreV1AWSElasticBlockStoreVolumeSourceToJSON(value.awsElasticBlockStore),
        'azureDisk': IoK8sApiCoreV1AzureDiskVolumeSourceToJSON(value.azureDisk),
        'azureFile': IoK8sApiCoreV1AzureFileVolumeSourceToJSON(value.azureFile),
        'cephfs': IoK8sApiCoreV1CephFSVolumeSourceToJSON(value.cephfs),
        'cinder': IoK8sApiCoreV1CinderVolumeSourceToJSON(value.cinder),
        'configMap': IoK8sApiCoreV1ConfigMapVolumeSourceToJSON(value.configMap),
        'csi': IoK8sApiCoreV1CSIVolumeSourceToJSON(value.csi),
        'downwardAPI': IoK8sApiCoreV1DownwardAPIVolumeSourceToJSON(value.downwardAPI),
        'emptyDir': IoK8sApiCoreV1EmptyDirVolumeSourceToJSON(value.emptyDir),
        'ephemeral': IoK8sApiCoreV1EphemeralVolumeSourceToJSON(value.ephemeral),
        'fc': IoK8sApiCoreV1FCVolumeSourceToJSON(value.fc),
        'flexVolume': IoK8sApiCoreV1FlexVolumeSourceToJSON(value.flexVolume),
        'flocker': IoK8sApiCoreV1FlockerVolumeSourceToJSON(value.flocker),
        'gcePersistentDisk': IoK8sApiCoreV1GCEPersistentDiskVolumeSourceToJSON(value.gcePersistentDisk),
        'gitRepo': IoK8sApiCoreV1GitRepoVolumeSourceToJSON(value.gitRepo),
        'glusterfs': IoK8sApiCoreV1GlusterfsVolumeSourceToJSON(value.glusterfs),
        'hostPath': IoK8sApiCoreV1HostPathVolumeSourceToJSON(value.hostPath),
        'iscsi': IoK8sApiCoreV1ISCSIVolumeSourceToJSON(value.iscsi),
        'name': value.name,
        'nfs': IoK8sApiCoreV1NFSVolumeSourceToJSON(value.nfs),
        'persistentVolumeClaim': IoK8sApiCoreV1PersistentVolumeClaimVolumeSourceToJSON(value.persistentVolumeClaim),
        'photonPersistentDisk': IoK8sApiCoreV1PhotonPersistentDiskVolumeSourceToJSON(value.photonPersistentDisk),
        'portworxVolume': IoK8sApiCoreV1PortworxVolumeSourceToJSON(value.portworxVolume),
        'projected': IoK8sApiCoreV1ProjectedVolumeSourceToJSON(value.projected),
        'quobyte': IoK8sApiCoreV1QuobyteVolumeSourceToJSON(value.quobyte),
        'rbd': IoK8sApiCoreV1RBDVolumeSourceToJSON(value.rbd),
        'scaleIO': IoK8sApiCoreV1ScaleIOVolumeSourceToJSON(value.scaleIO),
        'secret': IoK8sApiCoreV1SecretVolumeSourceToJSON(value.secret),
        'storageos': IoK8sApiCoreV1StorageOSVolumeSourceToJSON(value.storageos),
        'vsphereVolume': IoK8sApiCoreV1VsphereVirtualDiskVolumeSourceToJSON(value.vsphereVolume),
    };
}

