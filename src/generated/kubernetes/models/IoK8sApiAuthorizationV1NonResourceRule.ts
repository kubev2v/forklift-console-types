/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
/**
 * NonResourceRule holds information that describes a rule for the non-resource
 * @export
 * @interface IoK8sApiAuthorizationV1NonResourceRule
 */
export interface IoK8sApiAuthorizationV1NonResourceRule {
    /**
     * NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  "*" means all.
     * @type {Array<string>}
     * @memberof IoK8sApiAuthorizationV1NonResourceRule
     */
    nonResourceURLs?: string[];
    /**
     * Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
     * @type {Array<string>}
     * @memberof IoK8sApiAuthorizationV1NonResourceRule
     */
    verbs: string[];
}

/**
 * Check if a given object implements the IoK8sApiAuthorizationV1NonResourceRule interface.
 */
export function instanceOfIoK8sApiAuthorizationV1NonResourceRule(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "verbs" in value;

    return isInstance;
}

export function IoK8sApiAuthorizationV1NonResourceRuleFromJSON(json: any): IoK8sApiAuthorizationV1NonResourceRule {
    return IoK8sApiAuthorizationV1NonResourceRuleFromJSONTyped(json, false);
}

export function IoK8sApiAuthorizationV1NonResourceRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiAuthorizationV1NonResourceRule {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nonResourceURLs': !exists(json, 'nonResourceURLs') ? undefined : json['nonResourceURLs'],
        'verbs': json['verbs'],
    };
}

export function IoK8sApiAuthorizationV1NonResourceRuleToJSON(value?: IoK8sApiAuthorizationV1NonResourceRule | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nonResourceURLs': value.nonResourceURLs,
        'verbs': value.verbs,
    };
}

