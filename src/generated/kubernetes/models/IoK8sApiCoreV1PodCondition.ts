/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
/**
 * PodCondition contains details for the current condition of this pod.
 * @export
 * @interface IoK8sApiCoreV1PodCondition
 */
export interface IoK8sApiCoreV1PodCondition {
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApiCoreV1PodCondition
     */
    lastProbeTime?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApiCoreV1PodCondition
     */
    lastTransitionTime?: string;
    /**
     * Human-readable message indicating details about last transition.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodCondition
     */
    message?: string;
    /**
     * Unique, one-word, CamelCase reason for the condition's last transition.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodCondition
     */
    reason?: string;
    /**
     * Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
     * @type {string}
     * @memberof IoK8sApiCoreV1PodCondition
     */
    status: string;
    /**
     * Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
     * @type {string}
     * @memberof IoK8sApiCoreV1PodCondition
     */
    type: string;
}

/**
 * Check if a given object implements the IoK8sApiCoreV1PodCondition interface.
 */
export function instanceOfIoK8sApiCoreV1PodCondition(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function IoK8sApiCoreV1PodConditionFromJSON(json: any): IoK8sApiCoreV1PodCondition {
    return IoK8sApiCoreV1PodConditionFromJSONTyped(json, false);
}

export function IoK8sApiCoreV1PodConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiCoreV1PodCondition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastProbeTime': !exists(json, 'lastProbeTime') ? undefined : json['lastProbeTime'],
        'lastTransitionTime': !exists(json, 'lastTransitionTime') ? undefined : json['lastTransitionTime'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'status': json['status'],
        'type': json['type'],
    };
}

export function IoK8sApiCoreV1PodConditionToJSON(value?: IoK8sApiCoreV1PodCondition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastProbeTime': value.lastProbeTime === undefined ? undefined : (value.lastProbeTime),
        'lastTransitionTime': value.lastTransitionTime === undefined ? undefined : (value.lastTransitionTime),
        'message': value.message,
        'reason': value.reason,
        'status': value.status,
        'type': value.type,
    };
}

