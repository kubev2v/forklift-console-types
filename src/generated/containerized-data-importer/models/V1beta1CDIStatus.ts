/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt Containerized Data Importer API
 * Containerized Data Importer for KubeVirt.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../../runtime';
import type { V1Condition } from './V1Condition';
import {
    V1ConditionFromJSON,
    V1ConditionFromJSONTyped,
    V1ConditionToJSON,
} from './V1Condition';

/**
 * CDIStatus defines the status of the installation
 * @export
 * @interface V1beta1CDIStatus
 */
export interface V1beta1CDIStatus {
    /**
     * A list of current conditions of the resource
     * @type {Array<V1Condition>}
     * @memberof V1beta1CDIStatus
     */
    conditions?: Array<V1Condition>;
    /**
     * The observed version of the resource
     * @type {string}
     * @memberof V1beta1CDIStatus
     */
    observedVersion?: string;
    /**
     * The version of the resource as defined by the operator
     * @type {string}
     * @memberof V1beta1CDIStatus
     */
    operatorVersion?: string;
    /**
     * 
     * @type {string}
     * @memberof V1beta1CDIStatus
     */
    phase?: string;
    /**
     * The desired version of the resource
     * @type {string}
     * @memberof V1beta1CDIStatus
     */
    targetVersion?: string;
}

/**
 * Check if a given object implements the V1beta1CDIStatus interface.
 */
export function instanceOfV1beta1CDIStatus(value: object): value is V1beta1CDIStatus {
    return true;
}

export function V1beta1CDIStatusFromJSON(json: any): V1beta1CDIStatus {
    return V1beta1CDIStatusFromJSONTyped(json, false);
}

export function V1beta1CDIStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1CDIStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'conditions': json['conditions'] == null ? undefined : ((json['conditions'] as Array<any>).map(V1ConditionFromJSON)),
        'observedVersion': json['observedVersion'] == null ? undefined : json['observedVersion'],
        'operatorVersion': json['operatorVersion'] == null ? undefined : json['operatorVersion'],
        'phase': json['phase'] == null ? undefined : json['phase'],
        'targetVersion': json['targetVersion'] == null ? undefined : json['targetVersion'],
    };
}

export function V1beta1CDIStatusToJSON(value?: V1beta1CDIStatus | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'conditions': value['conditions'] == null ? undefined : ((value['conditions'] as Array<any>).map(V1ConditionToJSON)),
        'observedVersion': value['observedVersion'],
        'operatorVersion': value['operatorVersion'],
        'phase': value['phase'],
        'targetVersion': value['targetVersion'],
    };
}

