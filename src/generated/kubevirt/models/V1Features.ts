/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import type { V1FeatureAPIC } from './V1FeatureAPIC';
import {
    V1FeatureAPICFromJSON,
    V1FeatureAPICFromJSONTyped,
    V1FeatureAPICToJSON,
} from './V1FeatureAPIC';
import type { V1FeatureHyperv } from './V1FeatureHyperv';
import {
    V1FeatureHypervFromJSON,
    V1FeatureHypervFromJSONTyped,
    V1FeatureHypervToJSON,
} from './V1FeatureHyperv';
import type { V1FeatureKVM } from './V1FeatureKVM';
import {
    V1FeatureKVMFromJSON,
    V1FeatureKVMFromJSONTyped,
    V1FeatureKVMToJSON,
} from './V1FeatureKVM';
import type { V1FeatureState } from './V1FeatureState';
import {
    V1FeatureStateFromJSON,
    V1FeatureStateFromJSONTyped,
    V1FeatureStateToJSON,
} from './V1FeatureState';

/**
 * 
 * @export
 * @interface V1Features
 */
export interface V1Features {
    /**
     * 
     * @type {V1FeatureState}
     * @memberof V1Features
     */
    acpi?: V1FeatureState;
    /**
     * 
     * @type {V1FeatureAPIC}
     * @memberof V1Features
     */
    apic?: V1FeatureAPIC;
    /**
     * 
     * @type {V1FeatureHyperv}
     * @memberof V1Features
     */
    hyperv?: V1FeatureHyperv;
    /**
     * 
     * @type {V1FeatureKVM}
     * @memberof V1Features
     */
    kvm?: V1FeatureKVM;
    /**
     * 
     * @type {V1FeatureState}
     * @memberof V1Features
     */
    pvspinlock?: V1FeatureState;
    /**
     * 
     * @type {V1FeatureState}
     * @memberof V1Features
     */
    smm?: V1FeatureState;
}

/**
 * Check if a given object implements the V1Features interface.
 */
export function instanceOfV1Features(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1FeaturesFromJSON(json: any): V1Features {
    return V1FeaturesFromJSONTyped(json, false);
}

export function V1FeaturesFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Features {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'acpi': !exists(json, 'acpi') ? undefined : V1FeatureStateFromJSON(json['acpi']),
        'apic': !exists(json, 'apic') ? undefined : V1FeatureAPICFromJSON(json['apic']),
        'hyperv': !exists(json, 'hyperv') ? undefined : V1FeatureHypervFromJSON(json['hyperv']),
        'kvm': !exists(json, 'kvm') ? undefined : V1FeatureKVMFromJSON(json['kvm']),
        'pvspinlock': !exists(json, 'pvspinlock') ? undefined : V1FeatureStateFromJSON(json['pvspinlock']),
        'smm': !exists(json, 'smm') ? undefined : V1FeatureStateFromJSON(json['smm']),
    };
}

export function V1FeaturesToJSON(value?: V1Features | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'acpi': V1FeatureStateToJSON(value.acpi),
        'apic': V1FeatureAPICToJSON(value.apic),
        'hyperv': V1FeatureHypervToJSON(value.hyperv),
        'kvm': V1FeatureKVMToJSON(value.kvm),
        'pvspinlock': V1FeatureStateToJSON(value.pvspinlock),
        'smm': V1FeatureStateToJSON(value.smm),
    };
}

