/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import type { V1alpha1VirtualMachineExportVolumeFormat } from './V1alpha1VirtualMachineExportVolumeFormat';
import {
    V1alpha1VirtualMachineExportVolumeFormatFromJSON,
    V1alpha1VirtualMachineExportVolumeFormatFromJSONTyped,
    V1alpha1VirtualMachineExportVolumeFormatToJSON,
} from './V1alpha1VirtualMachineExportVolumeFormat';

/**
 * VirtualMachineExportVolume contains the name and available formats for the exported volume
 * @export
 * @interface V1alpha1VirtualMachineExportVolume
 */
export interface V1alpha1VirtualMachineExportVolume {
    /**
     * 
     * @type {Array<V1alpha1VirtualMachineExportVolumeFormat>}
     * @memberof V1alpha1VirtualMachineExportVolume
     */
    formats?: Array<V1alpha1VirtualMachineExportVolumeFormat>;
    /**
     * Name is the name of the exported volume
     * @type {string}
     * @memberof V1alpha1VirtualMachineExportVolume
     */
    name: string;
}

/**
 * Check if a given object implements the V1alpha1VirtualMachineExportVolume interface.
 */
export function instanceOfV1alpha1VirtualMachineExportVolume(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function V1alpha1VirtualMachineExportVolumeFromJSON(json: any): V1alpha1VirtualMachineExportVolume {
    return V1alpha1VirtualMachineExportVolumeFromJSONTyped(json, false);
}

export function V1alpha1VirtualMachineExportVolumeFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1VirtualMachineExportVolume {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'formats': !exists(json, 'formats') ? undefined : ((json['formats'] as Array<any>).map(V1alpha1VirtualMachineExportVolumeFormatFromJSON)),
        'name': json['name'],
    };
}

export function V1alpha1VirtualMachineExportVolumeToJSON(value?: V1alpha1VirtualMachineExportVolume | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'formats': value.formats === undefined ? undefined : ((value.formats as Array<any>).map(V1alpha1VirtualMachineExportVolumeFormatToJSON)),
        'name': value.name,
    };
}

