/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import type { K8sIoApiCoreV1ResourceRequirements } from './K8sIoApiCoreV1ResourceRequirements';
import {
    K8sIoApiCoreV1ResourceRequirementsFromJSON,
    K8sIoApiCoreV1ResourceRequirementsFromJSONTyped,
    K8sIoApiCoreV1ResourceRequirementsToJSON,
} from './K8sIoApiCoreV1ResourceRequirements';

/**
 * SupportContainerResources are used to specify the cpu/memory request and limits for the containers that support various features of Virtual Machines. These containers are usually idle and don't require a lot of memory or cpu.
 * @export
 * @interface V1SupportContainerResources
 */
export interface V1SupportContainerResources {
    /**
     * 
     * @type {K8sIoApiCoreV1ResourceRequirements}
     * @memberof V1SupportContainerResources
     */
    resources: K8sIoApiCoreV1ResourceRequirements;
    /**
     * 
     * @type {string}
     * @memberof V1SupportContainerResources
     */
    type: string;
}

/**
 * Check if a given object implements the V1SupportContainerResources interface.
 */
export function instanceOfV1SupportContainerResources(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "resources" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function V1SupportContainerResourcesFromJSON(json: any): V1SupportContainerResources {
    return V1SupportContainerResourcesFromJSONTyped(json, false);
}

export function V1SupportContainerResourcesFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1SupportContainerResources {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resources': K8sIoApiCoreV1ResourceRequirementsFromJSON(json['resources']),
        'type': json['type'],
    };
}

export function V1SupportContainerResourcesToJSON(value?: V1SupportContainerResources | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resources': K8sIoApiCoreV1ResourceRequirementsToJSON(value.resources),
        'type': value.type,
    };
}

