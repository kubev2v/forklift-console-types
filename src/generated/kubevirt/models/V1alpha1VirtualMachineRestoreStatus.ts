/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import type { V1alpha1Condition } from './V1alpha1Condition';
import {
    V1alpha1ConditionFromJSON,
    V1alpha1ConditionFromJSONTyped,
    V1alpha1ConditionToJSON,
} from './V1alpha1Condition';
import type { V1alpha1VolumeRestore } from './V1alpha1VolumeRestore';
import {
    V1alpha1VolumeRestoreFromJSON,
    V1alpha1VolumeRestoreFromJSONTyped,
    V1alpha1VolumeRestoreToJSON,
} from './V1alpha1VolumeRestore';

/**
 * VirtualMachineRestoreStatus is the spec for a VirtualMachineRestoreresource
 * @export
 * @interface V1alpha1VirtualMachineRestoreStatus
 */
export interface V1alpha1VirtualMachineRestoreStatus {
    /**
     * 
     * @type {boolean}
     * @memberof V1alpha1VirtualMachineRestoreStatus
     */
    complete?: boolean;
    /**
     * 
     * @type {Array<V1alpha1Condition>}
     * @memberof V1alpha1VirtualMachineRestoreStatus
     */
    conditions?: Array<V1alpha1Condition>;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1alpha1VirtualMachineRestoreStatus
     */
    deletedDataVolumes?: Array<string>;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof V1alpha1VirtualMachineRestoreStatus
     */
    restoreTime?: string;
    /**
     * 
     * @type {Array<V1alpha1VolumeRestore>}
     * @memberof V1alpha1VirtualMachineRestoreStatus
     */
    restores?: Array<V1alpha1VolumeRestore>;
}

/**
 * Check if a given object implements the V1alpha1VirtualMachineRestoreStatus interface.
 */
export function instanceOfV1alpha1VirtualMachineRestoreStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1alpha1VirtualMachineRestoreStatusFromJSON(json: any): V1alpha1VirtualMachineRestoreStatus {
    return V1alpha1VirtualMachineRestoreStatusFromJSONTyped(json, false);
}

export function V1alpha1VirtualMachineRestoreStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1VirtualMachineRestoreStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'complete': !exists(json, 'complete') ? undefined : json['complete'],
        'conditions': !exists(json, 'conditions') ? undefined : ((json['conditions'] as Array<any>).map(V1alpha1ConditionFromJSON)),
        'deletedDataVolumes': !exists(json, 'deletedDataVolumes') ? undefined : json['deletedDataVolumes'],
        'restoreTime': !exists(json, 'restoreTime') ? undefined : json['restoreTime'],
        'restores': !exists(json, 'restores') ? undefined : ((json['restores'] as Array<any>).map(V1alpha1VolumeRestoreFromJSON)),
    };
}

export function V1alpha1VirtualMachineRestoreStatusToJSON(value?: V1alpha1VirtualMachineRestoreStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'complete': value.complete,
        'conditions': value.conditions === undefined ? undefined : ((value.conditions as Array<any>).map(V1alpha1ConditionToJSON)),
        'deletedDataVolumes': value.deletedDataVolumes,
        'restoreTime': value.restoreTime === undefined ? undefined : (value.restoreTime),
        'restores': value.restores === undefined ? undefined : ((value.restores as Array<any>).map(V1alpha1VolumeRestoreToJSON)),
    };
}

