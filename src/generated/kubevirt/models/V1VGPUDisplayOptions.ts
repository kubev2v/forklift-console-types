/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import type { V1FeatureState } from './V1FeatureState';
import {
    V1FeatureStateFromJSON,
    V1FeatureStateFromJSONTyped,
    V1FeatureStateToJSON,
} from './V1FeatureState';

/**
 * 
 * @export
 * @interface V1VGPUDisplayOptions
 */
export interface V1VGPUDisplayOptions {
    /**
     * Enabled determines if a display addapter backed by a vGPU should be enabled or disabled on the guest. Defaults to true.
     * @type {boolean}
     * @memberof V1VGPUDisplayOptions
     */
    enabled?: boolean;
    /**
     * 
     * @type {V1FeatureState}
     * @memberof V1VGPUDisplayOptions
     */
    ramFB?: V1FeatureState;
}

/**
 * Check if a given object implements the V1VGPUDisplayOptions interface.
 */
export function instanceOfV1VGPUDisplayOptions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1VGPUDisplayOptionsFromJSON(json: any): V1VGPUDisplayOptions {
    return V1VGPUDisplayOptionsFromJSONTyped(json, false);
}

export function V1VGPUDisplayOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1VGPUDisplayOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'ramFB': !exists(json, 'ramFB') ? undefined : V1FeatureStateFromJSON(json['ramFB']),
    };
}

export function V1VGPUDisplayOptionsToJSON(value?: V1VGPUDisplayOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'ramFB': V1FeatureStateToJSON(value.ramFB),
    };
}

