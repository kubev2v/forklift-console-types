/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import type { K8sIoApiCoreV1TypedLocalObjectReference } from './K8sIoApiCoreV1TypedLocalObjectReference';
import {
    K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON,
    K8sIoApiCoreV1TypedLocalObjectReferenceFromJSONTyped,
    K8sIoApiCoreV1TypedLocalObjectReferenceToJSON,
} from './K8sIoApiCoreV1TypedLocalObjectReference';

/**
 * VirtualMachineRestoreSpec is the spec for a VirtualMachineRestoreresource
 * @export
 * @interface V1alpha1VirtualMachineRestoreSpec
 */
export interface V1alpha1VirtualMachineRestoreSpec {
    /**
     * If the target for the restore does not exist, it will be created. Patches holds JSON patches that would be applied to the target manifest before it's created. Patches should fit the target's Kind.
     * 
     * Example for a patch: {"op": "replace", "path": "/metadata/name", "value": "new-vm-name"}
     * @type {Array<string>}
     * @memberof V1alpha1VirtualMachineRestoreSpec
     */
    patches?: Array<string>;
    /**
     * 
     * @type {K8sIoApiCoreV1TypedLocalObjectReference}
     * @memberof V1alpha1VirtualMachineRestoreSpec
     */
    target: K8sIoApiCoreV1TypedLocalObjectReference;
    /**
     * 
     * @type {string}
     * @memberof V1alpha1VirtualMachineRestoreSpec
     */
    virtualMachineSnapshotName: string;
}

/**
 * Check if a given object implements the V1alpha1VirtualMachineRestoreSpec interface.
 */
export function instanceOfV1alpha1VirtualMachineRestoreSpec(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "target" in value;
    isInstance = isInstance && "virtualMachineSnapshotName" in value;

    return isInstance;
}

export function V1alpha1VirtualMachineRestoreSpecFromJSON(json: any): V1alpha1VirtualMachineRestoreSpec {
    return V1alpha1VirtualMachineRestoreSpecFromJSONTyped(json, false);
}

export function V1alpha1VirtualMachineRestoreSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1VirtualMachineRestoreSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'patches': !exists(json, 'patches') ? undefined : json['patches'],
        'target': K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON(json['target']),
        'virtualMachineSnapshotName': json['virtualMachineSnapshotName'],
    };
}

export function V1alpha1VirtualMachineRestoreSpecToJSON(value?: V1alpha1VirtualMachineRestoreSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'patches': value.patches,
        'target': K8sIoApiCoreV1TypedLocalObjectReferenceToJSON(value.target),
        'virtualMachineSnapshotName': value.virtualMachineSnapshotName,
    };
}

